{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Edwin\\\\Documents\\\\College\\\\CS_373\\\\cs373-web\\\\frontend\\\\empoweringknowledge\\\\src\\\\States.js\";\nimport React, { Component } from \"react\";\nimport { Button, ButtonGroup, ButtonToolbar, Col, Card, CardBody, CardTitle, CardSubtitle, CardDeck, Dropdown, DropdownToggle, DropdownMenu, DropdownItem, Pagination, PaginationItem, PaginationLink, Form, Input, FormGroup, Row } from 'reactstrap';\nimport { BrowserRouter } from 'react-router-dom';\nimport Highlighter from \"react-highlight-words\";\nimport './Navbar.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nconst STATESURL = 'https://api.empoweringknowledge.me/api/states';\nconst ORDER = '\"order_by\":[{\"field\":\"name\",\"direction\":\"';\nexport class States extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      page: 1,\n      pages: 0,\n      nextpage: 2,\n      lastpage: 1,\n      items: [],\n      input: \"\",\n      isLoading: false,\n      sortBy: \"asc\",\n      attributes: {\n        name: \"\",\n        dominant_party: \"\",\n        population: {\n          \"lower\": \"\",\n          \"upper\": \"\"\n        },\n        median_hh_income: {\n          \"lower\": \"\",\n          \"upper\": \"\"\n        },\n        primary_energy_source_1: \"\"\n      },\n      dropdownOpen: [false, false, false, false],\n      dropDownSelections: {\n        \"party\": \"None\",\n        \"population\": \"None\",\n        \"median\": \"None\",\n        \"resource\": \"None\"\n      }\n    };\n    this.handleTermChange = this.handleTermChange.bind(this);\n    this.handleSearch = this.handleSearch.bind(this);\n    this.handleEnter = this.handleEnter.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    this.setState({\n      isLoading: true\n    });\n    var url = this.buildUrl();\n    fetch(url).then(res => res.json()).then(data => {\n      this.setState({\n        items: data.objects,\n        items: data.objects,\n        pages: data.total_pages,\n        isLoading: false\n      }, () => {\n        if (this.state.pages <= 1) this.setState({\n          nextpage: 1\n        });\n      });\n    }).catch(console.log);\n  }\n  /*\r\n   * Builds the url that will be used to fetch the data.\r\n   */\n\n\n  buildUrl() {\n    var filter = \"\";\n    var url = \"\";\n    filter = this.buildFilter();\n    filter = this.buildSearch(filter); // If there aren't any filters or terms for searching, use default url\n    // that displays data in ascending order\n\n    if (filter === \"\") {\n      url = STATESURL + '?q={' + ORDER + this.state.sortBy + '\"}]}&page=' + this.state.page;\n    } else {\n      // Else, add the filters and search query\n      url = STATESURL + '?q={\"filters\":[' + filter + '],' + ORDER + this.state.sortBy + '\"}]}&page=' + this.state.page;\n    }\n\n    return url;\n  }\n  /*\r\n   * Loops through all of the of the model's filterable attributes and checks if \r\n   * there is a filter being applied. If there is, it adds that filter query to \r\n   * the filter string. \r\n   */\n\n\n  buildFilter() {\n    var filter = \"\";\n    var keys = Object.keys(this.state.attributes); // Grabs list of attributes\n\n    var currAttribute = \"\";\n    var currAttributeVal = \"\";\n\n    for (var i = 1; i < keys.length; i++) {\n      currAttribute = keys[i];\n      currAttributeVal = this.state.attributes[currAttribute]; // Special cases, checks if the attribute we're looking at is population \n      // or median\n\n      if (currAttribute === \"population\" || currAttribute === \"median_hh_income\") {\n        if (currAttributeVal[\"lower\"] !== \"\") {\n          // If filter is empty, no comma is needed at the beginning\n          if (filter === \"\") {\n            filter += '{\"name\":\"' + currAttribute + '\",\"op\":\"gt\",\"val\":\"' + currAttributeVal[\"lower\"] + '\"}';\n          } else {\n            filter += ',{\"name\":\"' + currAttribute + '\",\"op\":\"ge\",\"val\":\"' + currAttributeVal[\"lower\"] + '\"}';\n          } // Adds the second value to the filter query\n\n\n          if (currAttributeVal[\"upper\"] !== \"\") filter += ',{\"name\":\"' + currAttribute + '\",\"op\":\"le\",\"val\":\"' + currAttributeVal[\"upper\"] + '\"}';\n        }\n      } // Checks the rest of the attributes\n      else if (currAttributeVal !== \"\") {\n          if (filter === \"\") {\n            filter += '{\"name\":\"' + currAttribute + '\",\"op\":\"eq\",\"val\":\"' + currAttributeVal + '\"}';\n          } else {\n            filter += ',{\"name\":\"' + currAttribute + '\",\"op\":\"eq\",\"val\":\"' + currAttributeVal + '\"}';\n          }\n        }\n    }\n\n    return filter;\n  }\n  /*\r\n   * Loops through all of the model's attributes and adds a search query for each\r\n   * term the user inputs. \r\n   */\n\n\n  buildSearch(filter) {\n    var search = \"\";\n    var input = [];\n    var keys = Object.keys(this.state.attributes);\n    var currAttribute = \"\";\n    input = this.state.input.split(\" \"); // Check if there's atleast one search term\n\n    if (input[0] != \"\") {\n      if (filter === \"\") {\n        search = '{\"or\":[';\n      } else {\n        search = ',{\"or\":[';\n      }\n\n      for (var j = 0; j < keys.length; j++) {\n        for (var i = 0; i < input.length; i++) {\n          currAttribute = keys[j];\n          if (currAttribute === \"name\" && i == 0) search += '{\"name\":\"' + currAttribute + '\",\"op\":\"like\",\"val\":\"\\%' + input[i] + '\\%\"}';else search += ',{\"name\":\"' + currAttribute + '\",\"op\":\"like\",\"val\":\"\\%' + input[i] + '\\%\"}';\n        }\n      }\n\n      search += \"]}\";\n      filter += search;\n    }\n\n    return filter;\n  }\n\n  handleTermChange(e) {\n    this.setState({\n      input: e.target.value\n    });\n  }\n\n  handleSearch() {\n    this.componentDidMount();\n  }\n\n  handleEnter(e) {\n    if (e.key === 13) {\n      this.handleSearch();\n    }\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    this.handleSearch();\n  }\n\n  handlePageClick(newPage) {\n    if (newPage === 1) {\n      this.setState({\n        lastpage: newPage,\n        page: newPage,\n        nextpage: 2\n      }, () => {\n        this.componentDidMount();\n      });\n    } else if (newPage === this.state.pages) {\n      this.setState({\n        lastpage: newPage - 1,\n        page: newPage,\n        nextpage: newPage\n      }, () => {\n        this.componentDidMount();\n      });\n    } else {\n      this.setState({\n        lastpage: newPage - 1,\n        page: newPage,\n        nextpage: newPage + 1\n      }, () => {\n        this.componentDidMount();\n      });\n    }\n  }\n\n  handleSorting(sort) {\n    this.setState({\n      sortBy: sort\n    }, () => {\n      this.componentDidMount();\n    });\n  }\n\n  handleFilterParty(partyFilter) {\n    var newAttributes = this.state.attributes;\n    newAttributes[\"dominant_party\"] = partyFilter;\n    console.log(partyFilter);\n    this.setState({\n      attributes: newAttributes,\n      page: 1,\n      nextpage: 2,\n      lastpage: 1\n    }, () => {\n      this.componentDidMount();\n    });\n  }\n\n  handleFilterPopulation(populationFilter) {\n    var newAttributes = this.state.attributes;\n    newAttributes[\"population\"] = populationFilter;\n    this.setState({\n      attributes: newAttributes,\n      page: 1,\n      nextpage: 2,\n      lastpage: 1\n    }, () => {\n      this.componentDidMount();\n    });\n  }\n\n  handleFilterMedian(medianFilter) {\n    var newAttributes = this.state.attributes;\n    newAttributes[\"median_hh_income\"] = medianFilter;\n    this.setState({\n      attributes: newAttributes,\n      page: 1,\n      nextpage: 2,\n      lastpage: 1\n    }, () => {\n      this.componentDidMount();\n    });\n  }\n\n  handleFilterResource(resourceFilter) {\n    var newAttributes = this.state.attributes;\n    newAttributes[\"primary_energy_source_1\"] = resourceFilter;\n    this.setState({\n      attributes: newAttributes,\n      page: 1,\n      nextpage: 2,\n      lastpage: 1\n    }, () => {\n      this.componentDidMount();\n    });\n  }\n\n  handleReset() {\n    this.setState({\n      dropDownSelections: {\n        \"party\": \"None\",\n        \"population\": \"None\",\n        \"median\": \"None\",\n        \"resource\": \"None\"\n      },\n      input: \"\",\n      attributes: {\n        name: \"\",\n        dominant_party: \"\",\n        population: {\n          \"lower\": \"\",\n          \"upper\": \"\"\n        },\n        median_hh_income: {\n          \"lower\": \"\",\n          \"upper\": \"\"\n        },\n        primary_energy_source_1: \"\"\n      },\n      page: 1,\n      nextpage: 2,\n      lastpage: 1\n    }, () => {\n      this.componentDidMount();\n    });\n  }\n\n  setDropdownOpen(index) {\n    var newdropdownOpen = this.state.dropdownOpen;\n    newdropdownOpen[index] = !newdropdownOpen[index];\n    this.setState({\n      dropdownOpen: newdropdownOpen\n    });\n  }\n\n  setDropDownTitle(attribute, selection) {\n    var newDropDownSelections = this.state.dropDownSelections;\n    newDropDownSelections[attribute] = selection;\n    this.setState({\n      dropDownSelections: newDropDownSelections\n    });\n\n    if (selection === \"None\") {\n      selection = \"\";\n    }\n\n    if (attribute === \"party\") this.handleFilterParty(selection);else if (attribute === \"population\") {\n      var lowerPop = \"\";\n      var upperPop = \"\";\n\n      switch (selection) {\n        case \"1 - 999,999\":\n          selection = {\n            \"lower\": \"1\",\n            \"upper\": \"999999\"\n          };\n          break;\n\n        case \"1,000,000 - 9,999,999\":\n          selection = {\n            \"lower\": \"1000000\",\n            \"upper\": \"9999999\"\n          };\n          break;\n\n        case \"10,000,000 - 19,999,999\":\n          selection = {\n            \"lower\": \"10000000\",\n            \"upper\": \"19999999\"\n          };\n          break;\n\n        case \"> 20,000,000\":\n          selection = {\n            \"lower\": \"20000000\",\n            \"upper\": \"\"\n          };\n          break;\n\n        default:\n          selection = {\n            \"lower\": \"\",\n            \"upper\": \"\"\n          };\n      }\n\n      this.handleFilterPopulation(selection);\n    } else if (attribute === \"median\") {\n      switch (selection) {\n        case \"1 - 49,999\":\n          selection = {\n            \"lower\": \"1\",\n            \"upper\": \"49999\"\n          };\n          break;\n\n        case \"50,000 - 59,999\":\n          selection = {\n            \"lower\": \"50000\",\n            \"upper\": \"59999\"\n          };\n          break;\n\n        case \"60,000 - 69,999\":\n          selection = {\n            \"lower\": \"60000\",\n            \"upper\": \"69999\"\n          };\n          break;\n\n        case \"> 70,000\":\n          selection = {\n            \"lower\": \"70000\",\n            \"upper\": \"\"\n          };\n          break;\n\n        default:\n          selection = {\n            \"lower\": \"\",\n            \"upper\": \"\"\n          };\n      }\n\n      this.handleFilterMedian(selection);\n    } else if (attribute === \"resource\") this.handleFilterResource(selection);\n  }\n\n  renderSortAndFilter() {\n    var partyList = [\"None\", \"Democratic\", \"Republican\"];\n    var populationList = [\"None\", \"1 - 999,999\", \"1,000,000 - 9,999,999\", \"10,000,000 - 19,999,999\", \"> 20,000,000\"];\n    var medianList = [\"None\", \"1 - 49,999\", \"50,000 - 59,999\", \"60,000 - 69,999\", \"> 70,000\"];\n    var resourceList = [\"None\", \"Nuclear Power\", \"Natural Gas\", \"Coal\", \"Petroleum\", \"Hydroelectricity\"];\n    return React.createElement(\"container\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 339\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 340\n      },\n      __self: this\n    }, React.createElement(Col, {\n      className: \"text-left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341\n      },\n      __self: this\n    }, React.createElement(ButtonGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342\n      },\n      __self: this\n    }, React.createElement(Dropdown, {\n      isOpen: this.state.dropdownOpen[0],\n      toggle: () => this.setDropdownOpen(0),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 343\n      },\n      __self: this\n    }, React.createElement(DropdownToggle, {\n      caret: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344\n      },\n      __self: this\n    }, \"Filter by Party: \", this.state.dropDownSelections[\"party\"]), React.createElement(DropdownMenu, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 347\n      },\n      __self: this\n    }, partyList.map(party => React.createElement(DropdownItem, {\n      onClick: () => this.setDropDownTitle(\"party\", party),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350\n      },\n      __self: this\n    }, party))), ' '), React.createElement(Dropdown, {\n      isOpen: this.state.dropdownOpen[1],\n      toggle: () => this.setDropdownOpen(1),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 355\n      },\n      __self: this\n    }, React.createElement(DropdownToggle, {\n      caret: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 356\n      },\n      __self: this\n    }, \"Filter by Population: \", this.state.dropDownSelections[\"population\"]), React.createElement(DropdownMenu, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 359\n      },\n      __self: this\n    }, populationList.map(population => React.createElement(DropdownItem, {\n      onClick: () => this.setDropDownTitle(\"population\", population),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 362\n      },\n      __self: this\n    }, population))), ' '), React.createElement(Dropdown, {\n      isOpen: this.state.dropdownOpen[2],\n      toggle: () => this.setDropdownOpen(2),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 367\n      },\n      __self: this\n    }, React.createElement(DropdownToggle, {\n      caret: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 368\n      },\n      __self: this\n    }, \"Filter by Income: \", this.state.dropDownSelections[\"median\"]), React.createElement(DropdownMenu, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 371\n      },\n      __self: this\n    }, medianList.map(median => React.createElement(DropdownItem, {\n      onClick: () => this.setDropDownTitle(\"median\", median),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 374\n      },\n      __self: this\n    }, median))), ' '), React.createElement(Dropdown, {\n      isOpen: this.state.dropdownOpen[3],\n      toggle: () => this.setDropdownOpen(3),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 379\n      },\n      __self: this\n    }, React.createElement(DropdownToggle, {\n      caret: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 380\n      },\n      __self: this\n    }, \"Filter by Energy: \", this.state.dropDownSelections[\"resource\"]), React.createElement(DropdownMenu, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 383\n      },\n      __self: this\n    }, resourceList.map(resource => React.createElement(DropdownItem, {\n      onClick: () => this.setDropDownTitle(\"resource\", resource),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 386\n      },\n      __self: this\n    }, resource))), ' '), React.createElement(Button, {\n      onClick: () => this.handleReset(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 391\n      },\n      __self: this\n    }, \"Reset\"), ' ')), React.createElement(Col, {\n      className: \"text-right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 394\n      },\n      __self: this\n    }, React.createElement(Button, {\n      color: \"primary\",\n      onClick: () => this.handleSorting(\"asc\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 395\n      },\n      __self: this\n    }, \"Ascending\"), ' ', React.createElement(Button, {\n      color: \"secondary\",\n      onClick: () => this.handleSorting(\"desc\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 396\n      },\n      __self: this\n    }, \"Descending\"), ' ')));\n  }\n\n  render() {\n    var stateMap = {\n      \"Alabama\": \"al\",\n      \"Alaska\": \"ak\",\n      \"Arizona\": \"az\",\n      \"Arkansas\": \"ar\",\n      \"California\": \"ca\",\n      \"Colorado\": \"co\",\n      \"Connecticut\": \"ct\",\n      \"Delaware\": \"de\",\n      \"Florida\": \"fl\",\n      \"Georgia\": \"ga\",\n      \"Hawaii\": \"hi\",\n      \"Idaho\": \"id\",\n      \"Illinois\": \"il\",\n      \"Indiana\": \"in\",\n      \"Iowa\": \"ia\",\n      \"Kansas\": \"ks\",\n      \"Kentucky\": \"ky\",\n      \"Louisiana\": \"la\",\n      \"Maine\": \"me\",\n      \"Maryland\": \"md\",\n      \"Massachusetts\": \"ma\",\n      \"Michigan\": \"mi\",\n      \"Minnesota\": \"mn\",\n      \"Mississippi\": \"ms\",\n      \"Missouri\": \"mo\",\n      \"Montana\": \"mt\",\n      \"Nebraska\": \"ne\",\n      \"Nevada\": \"nv\",\n      \"New Hampshire\": \"nh\",\n      \"New Jersey\": \"nj\",\n      \"New Mexico\": \"nm\",\n      \"New York\": \"ny\",\n      \"North Carolina\": \"nc\",\n      \"North Dakota\": \"nd\",\n      \"Ohio\": \"oh\",\n      \"Oklahoma\": \"ok\",\n      \"Oregon\": \"or\",\n      \"Pennsylvania\": \"pa\",\n      \"Rhode Island\": \"ri\",\n      \"South Carolina\": \"sc\",\n      \"South Dakota\": \"sd\",\n      \"Tennessee\": \"tn\",\n      \"Texas\": \"tx\",\n      \"Utah\": \"ut\",\n      \"Vermont\": \"vt\",\n      \"Virginia\": \"va\",\n      \"Washington\": \"wa\",\n      \"West Virginia\": \"wv\",\n      \"Wisconsin\": \"wi\",\n      \"Wyoming\": \"wy\"\n    };\n    const _this$state = this.state,\n          items = _this$state.items,\n          isLoading = _this$state.isLoading;\n    console.log(isLoading);\n\n    if (isLoading) {\n      console.log(isLoading);\n      return false;\n    }\n\n    console.log(items);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 466\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 467\n      },\n      __self: this\n    }, this.renderSortAndFilter()), React.createElement(Form, {\n      className: \"searchbox\",\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 470\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      row: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 471\n      },\n      __self: this\n    }, React.createElement(Col, {\n      sm: {\n        size: 'auto',\n        offset: 5\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 473\n      },\n      __self: this\n    }, React.createElement(Input, {\n      type: \"text\",\n      placeholder: \"Search\",\n      onChange: this.handleTermChange,\n      onKeyDown: this.handleEnter,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 474\n      },\n      __self: this\n    })))), React.createElement(\"div\", {\n      className: \"States\",\n      style: {\n        paddingTop: \"100px\",\n        width: \"100%\",\n        height: \"60%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 484\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 485\n      },\n      __self: this\n    }, React.createElement(Col, {\n      sm: {\n        size: 'auto'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 487\n      },\n      __self: this\n    }, React.createElement(CardDeck, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 488\n      },\n      __self: this\n    }, items.slice(0, 3).map(item => React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 490\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      top: true,\n      width: \"80%\",\n      style: {\n        width: '300px',\n        height: '375px'\n      },\n      src: \"https://www.state-maps.org/\" + stateMap[item.name] + \".gif\",\n      alt: \"No image\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 491\n      },\n      __self: this\n    }), React.createElement(CardBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 492\n      },\n      __self: this\n    }, React.createElement(CardTitle, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 493\n      },\n      __self: this\n    }, React.createElement(Highlighter, {\n      highlightClassName: \"HighlightClass\",\n      searchWords: this.state.input.split(\" \"),\n      autoEscape: true,\n      textToHighlight: \"\" + item.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 493\n      },\n      __self: this\n    })), React.createElement(CardSubtitle, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 498\n      },\n      __self: this\n    }, \"Dominate Party: \", React.createElement(Highlighter, {\n      highlightClassName: \"HighlightClass\",\n      searchWords: this.state.input.split(\" \"),\n      autoEscape: true,\n      textToHighlight: \"\" + item.dominant_party,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 498\n      },\n      __self: this\n    })), React.createElement(CardSubtitle, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 503\n      },\n      __self: this\n    }, \"Population: \", React.createElement(Highlighter, {\n      highlightClassName: \"HighlightClass\",\n      searchWords: this.state.input.split(\" \"),\n      autoEscape: true,\n      textToHighlight: \"\" + item.population,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 503\n      },\n      __self: this\n    })), React.createElement(CardSubtitle, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 508\n      },\n      __self: this\n    }, \"Median Income: \", React.createElement(Highlighter, {\n      highlightClassName: \"HighlightClass\",\n      searchWords: this.state.input.split(\" \"),\n      autoEscape: true,\n      textToHighlight: \"\" + item.median_hh_income,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 508\n      },\n      __self: this\n    })), React.createElement(CardSubtitle, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 513\n      },\n      __self: this\n    }, \"Primary Energy Source: \", React.createElement(Highlighter, {\n      highlightClassName: \"HighlightClass\",\n      searchWords: this.state.input.split(\" \"),\n      autoEscape: true,\n      textToHighlight: \"\" + item.primary_energy_source_1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 513\n      },\n      __self: this\n    })), React.createElement(Button, {\n      href: \"/state/\" + item.name,\n      class: \"nav-link\",\n      to: \"/state/\" + item.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 518\n      },\n      __self: this\n    }, \" See More\"))))), React.createElement(CardDeck, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 524\n      },\n      __self: this\n    }, items.slice(3, 6).map(item => React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 526\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      top: true,\n      width: \"80%\",\n      style: {\n        width: '300px',\n        height: '375px'\n      },\n      src: \"https://www.state-maps.org/\" + stateMap[item.name] + \".gif\",\n      alt: \"No image\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 527\n      },\n      __self: this\n    }), React.createElement(CardBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 528\n      },\n      __self: this\n    }, React.createElement(CardTitle, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 529\n      },\n      __self: this\n    }, React.createElement(Highlighter, {\n      highlightClassName: \"HighlightClass\",\n      searchWords: this.state.input.split(\" \"),\n      autoEscape: true,\n      textToHighlight: \"\" + item.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 529\n      },\n      __self: this\n    })), React.createElement(CardSubtitle, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 534\n      },\n      __self: this\n    }, \"Dominate Party: \", React.createElement(Highlighter, {\n      highlightClassName: \"HighlightClass\",\n      searchWords: this.state.input.split(\" \"),\n      autoEscape: true,\n      textToHighlight: \"\" + item.dominant_party,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 534\n      },\n      __self: this\n    })), React.createElement(CardSubtitle, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 539\n      },\n      __self: this\n    }, \"Population: \", React.createElement(Highlighter, {\n      highlightClassName: \"HighlightClass\",\n      searchWords: this.state.input.split(\" \"),\n      autoEscape: true,\n      textToHighlight: \"\" + item.population,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 539\n      },\n      __self: this\n    })), React.createElement(CardSubtitle, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 544\n      },\n      __self: this\n    }, \"Median Income: \", React.createElement(Highlighter, {\n      highlightClassName: \"HighlightClass\",\n      searchWords: this.state.input.split(\" \"),\n      autoEscape: true,\n      textToHighlight: \"\" + item.median_hh_income,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 544\n      },\n      __self: this\n    })), React.createElement(CardSubtitle, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 549\n      },\n      __self: this\n    }, \"Primary Energy Source: \", React.createElement(Highlighter, {\n      highlightClassName: \"HighlightClass\",\n      searchWords: this.state.input.split(\" \"),\n      autoEscape: true,\n      textToHighlight: \"\" + item.primary_energy_source_1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 549\n      },\n      __self: this\n    })), React.createElement(Button, {\n      href: \"/state/\" + item.name,\n      class: \"nav-link\",\n      to: \"/state/\" + item.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 554\n      },\n      __self: this\n    }, \" See More\"))))), React.createElement(CardDeck, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 560\n      },\n      __self: this\n    }, items.slice(6, 10).map(item => React.createElement(Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 562\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      top: true,\n      width: \"80%\",\n      style: {\n        width: '300px',\n        height: '375px'\n      },\n      src: \"https://www.state-maps.org/\" + stateMap[item.name] + \".gif\",\n      alt: \"No image\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 563\n      },\n      __self: this\n    }), React.createElement(CardBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 564\n      },\n      __self: this\n    }, React.createElement(CardTitle, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 565\n      },\n      __self: this\n    }, React.createElement(Highlighter, {\n      highlightClassName: \"HighlightClass\",\n      searchWords: this.state.input.split(\" \"),\n      autoEscape: true,\n      textToHighlight: \"\" + item.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 565\n      },\n      __self: this\n    })), React.createElement(CardSubtitle, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 570\n      },\n      __self: this\n    }, \"Dominate Party: \", React.createElement(Highlighter, {\n      highlightClassName: \"HighlightClass\",\n      searchWords: this.state.input.split(\" \"),\n      autoEscape: true,\n      textToHighlight: \"\" + item.dominant_party,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 570\n      },\n      __self: this\n    })), React.createElement(CardSubtitle, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 575\n      },\n      __self: this\n    }, \"Population: \", React.createElement(Highlighter, {\n      highlightClassName: \"HighlightClass\",\n      searchWords: this.state.input.split(\" \"),\n      autoEscape: true,\n      textToHighlight: \"\" + item.population,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 575\n      },\n      __self: this\n    })), React.createElement(CardSubtitle, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 580\n      },\n      __self: this\n    }, \"Median Income: \", React.createElement(Highlighter, {\n      highlightClassName: \"HighlightClass\",\n      searchWords: this.state.input.split(\" \"),\n      autoEscape: true,\n      textToHighlight: \"\" + item.median_hh_income,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 580\n      },\n      __self: this\n    })), React.createElement(CardSubtitle, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 585\n      },\n      __self: this\n    }, \"Primary Energy Source: \", React.createElement(Highlighter, {\n      highlightClassName: \"HighlightClass\",\n      searchWords: this.state.input.split(\" \"),\n      autoEscape: true,\n      textToHighlight: \"\" + item.primary_energy_source_1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 585\n      },\n      __self: this\n    })), React.createElement(Button, {\n      href: \"/state/\" + item.name,\n      class: \"nav-link\",\n      to: \"/state/\" + item.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 590\n      },\n      __self: this\n    }, \" See More\"))))))), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 601\n      },\n      __self: this\n    }, React.createElement(Pagination, {\n      size: \"lg\",\n      style: {\n        justifyContent: 'center',\n        paddingTop: '3%'\n      },\n      \"aria-label\": \"Page navigation example\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 602\n      },\n      __self: this\n    }, React.createElement(PaginationItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 603\n      },\n      __self: this\n    }, React.createElement(PaginationLink, {\n      first: true,\n      onClick: () => this.handlePageClick(1),\n      href: \"#\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 604\n      },\n      __self: this\n    })), React.createElement(PaginationItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 606\n      },\n      __self: this\n    }, React.createElement(PaginationLink, {\n      previous: true,\n      onClick: () => this.handlePageClick(this.state.lastpage),\n      href: \"#\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 607\n      },\n      __self: this\n    })), React.createElement(PaginationItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 614\n      },\n      __self: this\n    }, React.createElement(PaginationLink, {\n      onClick: () => this.handlePageClick(this.state.page),\n      href: \"#\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 615\n      },\n      __self: this\n    }, this.state.page)), React.createElement(PaginationItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 619\n      },\n      __self: this\n    }, React.createElement(PaginationLink, {\n      onClick: () => this.handlePageClick(this.state.nextpage),\n      href: \"#\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 620\n      },\n      __self: this\n    }, this.state.nextpage)), React.createElement(PaginationItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 624\n      },\n      __self: this\n    }, React.createElement(PaginationLink, {\n      next: true,\n      onClick: () => this.handlePageClick(this.state.nextpage),\n      href: \"#\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 625\n      },\n      __self: this\n    })), React.createElement(PaginationItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 627\n      },\n      __self: this\n    }, React.createElement(PaginationLink, {\n      last: true,\n      onClick: () => this.handlePageClick(this.state.pages),\n      href: \"#\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 628\n      },\n      __self: this\n    }))))));\n  }\n\n}\nexport default States;","map":{"version":3,"sources":["C:\\Users\\Edwin\\Documents\\College\\CS_373\\cs373-web\\frontend\\empoweringknowledge\\src\\States.js"],"names":["React","Component","Button","ButtonGroup","ButtonToolbar","Col","Card","CardBody","CardTitle","CardSubtitle","CardDeck","Dropdown","DropdownToggle","DropdownMenu","DropdownItem","Pagination","PaginationItem","PaginationLink","Form","Input","FormGroup","Row","BrowserRouter","Highlighter","STATESURL","ORDER","States","constructor","props","state","page","pages","nextpage","lastpage","items","input","isLoading","sortBy","attributes","name","dominant_party","population","median_hh_income","primary_energy_source_1","dropdownOpen","dropDownSelections","handleTermChange","bind","handleSearch","handleEnter","handleSubmit","componentDidMount","setState","url","buildUrl","fetch","then","res","json","data","objects","total_pages","catch","console","log","filter","buildFilter","buildSearch","keys","Object","currAttribute","currAttributeVal","i","length","search","split","j","e","target","value","key","preventDefault","handlePageClick","newPage","handleSorting","sort","handleFilterParty","partyFilter","newAttributes","handleFilterPopulation","populationFilter","handleFilterMedian","medianFilter","handleFilterResource","resourceFilter","handleReset","setDropdownOpen","index","newdropdownOpen","setDropDownTitle","attribute","selection","newDropDownSelections","lowerPop","upperPop","renderSortAndFilter","partyList","populationList","medianList","resourceList","map","party","median","resource","render","stateMap","size","offset","paddingTop","width","height","slice","item","justifyContent"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\r\nimport {\r\n    Button, ButtonGroup, ButtonToolbar, Col, Card, CardBody,\r\n    CardTitle, CardSubtitle, CardDeck, Dropdown, DropdownToggle, DropdownMenu, \r\n    DropdownItem, Pagination, PaginationItem, PaginationLink,  Form, Input, \r\n    FormGroup, Row\r\n    } from 'reactstrap';\r\nimport {BrowserRouter} from 'react-router-dom';\r\nimport Highlighter from \"react-highlight-words\";\r\nimport './Navbar.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nconst STATESURL = 'https://api.empoweringknowledge.me/api/states'\r\nconst ORDER = '\"order_by\":[{\"field\":\"name\",\"direction\":\"'\r\n\r\nexport class States extends Component {\r\n\r\nconstructor(props) {\r\n    super(props);\r\n    this.state = {\r\n        page: 1,\r\n        pages: 0,\r\n        nextpage: 2,\r\n        lastpage: 1,\r\n        items: [],\r\n        input: \"\",\r\n        isLoading: false,\r\n        sortBy: \"asc\",\r\n        attributes: {\r\n            name: \"\", \r\n            dominant_party: \"\", \r\n            population: {\"lower\": \"\", \"upper\": \"\"}, \r\n            median_hh_income: {\"lower\": \"\", \"upper\": \"\"}, \r\n            primary_energy_source_1: \"\"},\r\n        dropdownOpen: [false, false, false, false],\r\n        dropDownSelections: {\r\n            \"party\":\"None\", \r\n            \"population\": \"None\", \r\n            \"median\":\"None\", \r\n            \"resource\":\"None\"}\r\n    } \r\n    this.handleTermChange = this.handleTermChange.bind(this);\r\n    this.handleSearch = this.handleSearch.bind(this);\r\n    this.handleEnter = this.handleEnter.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this); \r\n}\r\n\r\ncomponentDidMount() {\r\n    this.setState({isLoading: true});\r\n\r\n    var url = this.buildUrl();\r\n\r\n    fetch(url)\r\n        .then(res => res.json())\r\n        .then((data) => {\r\n            this.setState({ items: data.objects, items: data.objects, \r\n                pages:data.total_pages,isLoading: false}, () => {\r\n                if(this.state.pages <= 1)\r\n                    this.setState({nextpage: 1})    \r\n            });      \r\n        })\r\n        .catch(console.log);\r\n}\r\n\r\n/*\r\n * Builds the url that will be used to fetch the data.\r\n */\r\nbuildUrl(){\r\n    var filter = \"\";\r\n    var url = \"\";\r\n    \r\n    filter = this.buildFilter();\r\n    filter = this.buildSearch(filter);\r\n    \r\n    // If there aren't any filters or terms for searching, use default url\r\n    // that displays data in ascending order\r\n    if(filter === \"\"){\r\n        url = STATESURL + '?q={'\r\n        + ORDER \r\n        + this.state.sortBy \r\n        + '\"}]}&page='\r\n        + this.state.page;\r\n    } else{ // Else, add the filters and search query\r\n        url = STATESURL + '?q={\"filters\":['\r\n        + filter\r\n        + '],'\r\n        + ORDER\r\n        + this.state.sortBy \r\n        + '\"}]}&page='\r\n        + this.state.page;\r\n    }\r\n\r\n    return url\r\n}\r\n\r\n/*\r\n * Loops through all of the of the model's filterable attributes and checks if \r\n * there is a filter being applied. If there is, it adds that filter query to \r\n * the filter string. \r\n */\r\nbuildFilter(){\r\n    var filter = \"\"\r\n    var keys = Object.keys(this.state.attributes) // Grabs list of attributes\r\n    var currAttribute = \"\"\r\n    var currAttributeVal = \"\"\r\n\r\n    for(var i = 1; i < keys.length; i++){\r\n        currAttribute = keys[i]\r\n        currAttributeVal = this.state.attributes[currAttribute]\r\n\r\n        // Special cases, checks if the attribute we're looking at is population \r\n        // or median\r\n        if(currAttribute === \"population\" || \r\n            currAttribute === \"median_hh_income\"){\r\n            if(currAttributeVal[\"lower\"] !== \"\"){\r\n                // If filter is empty, no comma is needed at the beginning\r\n                if(filter === \"\"){ \r\n                    filter += '{\"name\":\"' + currAttribute   \r\n                        + '\",\"op\":\"gt\",\"val\":\"'+ currAttributeVal[\"lower\"] +'\"}'\r\n                } else{\r\n                    filter += ',{\"name\":\"' + currAttribute \r\n                        + '\",\"op\":\"ge\",\"val\":\"'+ currAttributeVal[\"lower\"] +'\"}'\r\n                }\r\n\r\n                // Adds the second value to the filter query\r\n                if(currAttributeVal[\"upper\"] !== \"\")\r\n                    filter += ',{\"name\":\"' + currAttribute \r\n                        + '\",\"op\":\"le\",\"val\":\"'+ currAttributeVal[\"upper\"] +'\"}'\r\n            }\r\n        }\r\n\r\n        // Checks the rest of the attributes\r\n        else if( currAttributeVal !== \"\"){\r\n            if(filter === \"\"){\r\n                filter += '{\"name\":\"' + currAttribute \r\n                    + '\",\"op\":\"eq\",\"val\":\"'+ currAttributeVal +'\"}'\r\n            }else{\r\n                filter += ',{\"name\":\"' + currAttribute \r\n                    + '\",\"op\":\"eq\",\"val\":\"'+ currAttributeVal +'\"}'\r\n            }\r\n        }\r\n    }\r\n\r\n    return filter\r\n}\r\n\r\n/*\r\n * Loops through all of the model's attributes and adds a search query for each\r\n * term the user inputs. \r\n */\r\nbuildSearch(filter){\r\n    var search = \"\"\r\n    var input = []\r\n    var keys = Object.keys(this.state.attributes)\r\n    var currAttribute = \"\"\r\n\r\n    input = this.state.input.split(\" \");\r\n\r\n    // Check if there's atleast one search term\r\n    if(input[0] != \"\"){\r\n        if(filter === \"\"){ \r\n            search = '{\"or\":[';\r\n        }\r\n        else{\r\n            search = ',{\"or\":[';\r\n        }\r\n\r\n        for(var j = 0; j < keys.length; j++){\r\n            for(var i = 0; i < input.length; i++){\r\n                currAttribute = keys[j]\r\n                if(currAttribute === \"name\" && i == 0)\r\n                    search += '{\"name\":\"' + currAttribute + '\",\"op\":\"like\",\"val\":\"\\%'+ input[i] +'\\%\"}'\r\n                else\r\n                    search += ',{\"name\":\"' + currAttribute + '\",\"op\":\"like\",\"val\":\"\\%'+ input[i] +'\\%\"}'\r\n            }\r\n        }\r\n\r\n        search += \"]}\";\r\n        filter += search;\r\n    }\r\n    return filter\r\n}\r\n\r\n    handleTermChange(e) {\r\n\r\n        this.setState({ input: e.target.value });\r\n      \r\n    }\r\n  \r\n    handleSearch() {\r\n      \r\n        this.componentDidMount();\r\n    }\r\n  \r\n    handleEnter(e) {\r\n        \r\n        if (e.key === 13) {\r\n        this.handleSearch();\r\n        }\r\n    }\r\n  \r\n    handleSubmit(e) {\r\n        e.preventDefault();\r\n        this.handleSearch();\r\n    }\r\n\r\n    handlePageClick(newPage){\r\n        if(newPage === 1){\r\n            this.setState({lastpage: newPage, page: newPage, nextpage: 2}, () => {\r\n            this.componentDidMount();\r\n            });\r\n        }\r\n        else if(newPage === this.state.pages){\r\n            this.setState({lastpage: newPage - 1, page: newPage, nextpage: newPage}, () => {\r\n                this.componentDidMount();\r\n                });\r\n        }\r\n        else{\r\n            this.setState({lastpage: newPage - 1, page: newPage, nextpage: newPage + 1}, () => {\r\n                this.componentDidMount();\r\n                });\r\n        }\r\n        \r\n    }\r\n\r\n    handleSorting(sort){\r\n        this.setState({sortBy: sort}, () => {\r\n        this.componentDidMount();\r\n        });\r\n\r\n    }\r\n\r\n    handleFilterParty(partyFilter){\r\n        var newAttributes = this.state.attributes\r\n        newAttributes[\"dominant_party\"] = partyFilter\r\n        console.log(partyFilter);\r\n        this.setState({attributes: newAttributes, page: 1, nextpage: 2, lastpage: 1}, () =>{\r\n        this.componentDidMount();\r\n        });\r\n    }\r\n\r\n    handleFilterPopulation(populationFilter){\r\n        var newAttributes = this.state.attributes\r\n        newAttributes[\"population\"] = populationFilter\r\n        this.setState({attributes: newAttributes, page: 1, nextpage: 2, lastpage: 1}, () =>{\r\n        this.componentDidMount();\r\n        });\r\n    }\r\n\r\n    handleFilterMedian(medianFilter){\r\n        var newAttributes = this.state.attributes\r\n        newAttributes[\"median_hh_income\"] = medianFilter\r\n        this.setState({attributes: newAttributes, page: 1, nextpage: 2, lastpage: 1}, () =>{\r\n        this.componentDidMount();\r\n        });\r\n    }\r\n\r\n    handleFilterResource(resourceFilter){\r\n        var newAttributes = this.state.attributes\r\n        newAttributes[\"primary_energy_source_1\"] = resourceFilter\r\n        this.setState({attributes: newAttributes, page: 1, nextpage: 2, lastpage: 1}, () =>{\r\n        this.componentDidMount();\r\n        });\r\n    }\r\n\r\n    handleReset(){\r\n        this.setState({dropDownSelections: {\"party\":\"None\", \"population\": \"None\", \"median\":\"None\", \"resource\":\"None\"}, input: \"\", attributes: {name: \"\", dominant_party: \"\", population: {\"lower\": \"\", \"upper\": \"\"}, median_hh_income: {\"lower\": \"\", \"upper\": \"\"}, primary_energy_source_1: \"\"},page: 1, nextpage: 2, lastpage: 1}, () =>{\r\n        this.componentDidMount();\r\n        });\r\n    }\r\n\r\n    setDropdownOpen(index){\r\n        var newdropdownOpen = this.state.dropdownOpen;\r\n        newdropdownOpen[index] = !newdropdownOpen[index];\r\n        this.setState({dropdownOpen: newdropdownOpen});\r\n    }\r\n\r\n    setDropDownTitle(attribute, selection){\r\n        var newDropDownSelections = this.state.dropDownSelections;\r\n        newDropDownSelections[attribute] = selection;\r\n        this.setState({dropDownSelections: newDropDownSelections});\r\n        if(selection === \"None\"){\r\n            selection = \"\";\r\n        }\r\n        if(attribute === \"party\")\r\n            this.handleFilterParty(selection);\r\n        else if(attribute === \"population\"){\r\n            var lowerPop = \"\"\r\n            var upperPop = \"\"\r\n            switch(selection){\r\n                case \"1 - 999,999\":\r\n                    selection = {\"lower\": \"1\", \"upper\": \"999999\"}\r\n                    break;\r\n                case \"1,000,000 - 9,999,999\":\r\n                    selection = {\"lower\": \"1000000\", \"upper\": \"9999999\"}\r\n                    break;\r\n                case \"10,000,000 - 19,999,999\":\r\n                    selection = {\"lower\": \"10000000\", \"upper\": \"19999999\"}\r\n                    break;\r\n                case \"> 20,000,000\":\r\n                    selection = {\"lower\": \"20000000\", \"upper\": \"\"}\r\n                    break;\r\n                default:\r\n                    selection = {\"lower\": \"\", \"upper\": \"\"}\r\n            }\r\n            this.handleFilterPopulation(selection);\r\n        }\r\n        else if(attribute === \"median\"){\r\n            switch(selection){\r\n                case \"1 - 49,999\":\r\n                    selection = {\"lower\": \"1\", \"upper\": \"49999\"}\r\n                    break;\r\n                case \"50,000 - 59,999\":\r\n                    selection = {\"lower\": \"50000\", \"upper\": \"59999\"}\r\n                    break;\r\n                case \"60,000 - 69,999\":\r\n                    selection = {\"lower\": \"60000\", \"upper\": \"69999\"}\r\n                    break;\r\n                case \"> 70,000\":\r\n                    selection = {\"lower\": \"70000\", \"upper\": \"\"}\r\n                    break;\r\n                default:\r\n                    selection = {\"lower\": \"\", \"upper\": \"\"}\r\n            }\r\n            this.handleFilterMedian(selection);\r\n        }\r\n        else if(attribute === \"resource\")\r\n            this.handleFilterResource(selection);\r\n    }\r\n\r\n    renderSortAndFilter(){\r\n\r\n        var partyList = [\"None\", \"Democratic\", \"Republican\"]\r\n        var populationList = [\"None\", \"1 - 999,999\", \"1,000,000 - 9,999,999\", \"10,000,000 - 19,999,999\", \"> 20,000,000\"]\r\n        var medianList = [\"None\", \"1 - 49,999\", \"50,000 - 59,999\", \"60,000 - 69,999\", \"> 70,000\"]\r\n        var resourceList = [\"None\", \"Nuclear Power\", \"Natural Gas\", \"Coal\", \"Petroleum\", \"Hydroelectricity\"]\r\n\r\n        return(\r\n            <container>\r\n                <Row>\r\n                    <Col className=\"text-left\">\r\n                        <ButtonGroup>\r\n                            <Dropdown isOpen={this.state.dropdownOpen[0]} toggle={() => this.setDropdownOpen(0)}>\r\n                                <DropdownToggle caret>\r\n                                    Filter by Party: {this.state.dropDownSelections[\"party\"]}\r\n                                </DropdownToggle>\r\n                                <DropdownMenu>\r\n                                    {\r\n                                        partyList.map((party) =>\r\n                                            <DropdownItem onClick={() => this.setDropDownTitle(\"party\", party)}>{party}</DropdownItem>\r\n                                        )\r\n                                    }\r\n                                </DropdownMenu>{' '}\r\n                            </Dropdown>\r\n                            <Dropdown isOpen={this.state.dropdownOpen[1]} toggle={() => this.setDropdownOpen(1)}>\r\n                                <DropdownToggle caret>\r\n                                    Filter by Population: {this.state.dropDownSelections[\"population\"]}\r\n                                </DropdownToggle>\r\n                                <DropdownMenu>\r\n                                    {\r\n                                        populationList.map((population) =>\r\n                                            <DropdownItem onClick={() => this.setDropDownTitle(\"population\", population)}>{population}</DropdownItem>\r\n                                        )\r\n                                    }\r\n                                </DropdownMenu>{' '}\r\n                            </Dropdown>\r\n                            <Dropdown isOpen={this.state.dropdownOpen[2]} toggle={() => this.setDropdownOpen(2)}>\r\n                                <DropdownToggle caret>\r\n                                    Filter by Income: {this.state.dropDownSelections[\"median\"]}\r\n                                </DropdownToggle>\r\n                                <DropdownMenu>\r\n                                    {\r\n                                        medianList.map((median) =>\r\n                                            <DropdownItem onClick={() => this.setDropDownTitle(\"median\", median)}>{median}</DropdownItem>\r\n                                        )\r\n                                    }\r\n                                </DropdownMenu>{' '}\r\n                            </Dropdown>\r\n                            <Dropdown isOpen={this.state.dropdownOpen[3]} toggle={() => this.setDropdownOpen(3)}>\r\n                                <DropdownToggle caret>\r\n                                    Filter by Energy: {this.state.dropDownSelections[\"resource\"]}\r\n                                </DropdownToggle>\r\n                                <DropdownMenu>\r\n                                    {\r\n                                        resourceList.map((resource) =>\r\n                                            <DropdownItem onClick={() => this.setDropDownTitle(\"resource\", resource)}>{resource}</DropdownItem>\r\n                                        )\r\n                                    }\r\n                                </DropdownMenu>{' '}\r\n                            </Dropdown>\r\n                            <Button onClick={() => this.handleReset()}>Reset</Button>{' '}\r\n                        </ButtonGroup>\r\n                    </Col>\r\n                    <Col className=\"text-right\">\r\n                        <Button color=\"primary\" onClick={() => this.handleSorting(\"asc\")}>Ascending</Button>{' '}\r\n                        <Button color=\"secondary\"onClick={() => this.handleSorting(\"desc\")}>Descending</Button>{' '}\r\n                    </Col>\r\n                </Row>\r\n            </container>\r\n        );\r\n    }\r\n    \r\n    render() {\r\n        var stateMap = {\r\n            \"Alabama\":\"al\",\r\n            \"Alaska\":\"ak\",\r\n            \"Arizona\":\"az\",\r\n            \"Arkansas\":\"ar\",\r\n            \"California\":\"ca\",\r\n            \"Colorado\":\"co\",\r\n            \"Connecticut\":\"ct\",\r\n            \"Delaware\":\"de\",\r\n            \"Florida\":\"fl\",\r\n            \"Georgia\":\"ga\",\r\n            \"Hawaii\":\"hi\",\r\n            \"Idaho\":\"id\",\r\n            \"Illinois\":\"il\",\r\n            \"Indiana\":\"in\",\r\n            \"Iowa\":\"ia\",\r\n            \"Kansas\":\"ks\",\r\n            \"Kentucky\":\"ky\",\r\n            \"Louisiana\":\"la\",\r\n            \"Maine\":\"me\",\r\n            \"Maryland\":\"md\",\r\n            \"Massachusetts\":\"ma\",\r\n            \"Michigan\":\"mi\",\r\n            \"Minnesota\":\"mn\",\r\n            \"Mississippi\":\"ms\",\r\n            \"Missouri\":\"mo\",\r\n            \"Montana\":\"mt\",\r\n            \"Nebraska\":\"ne\",\r\n            \"Nevada\":\"nv\",\r\n            \"New Hampshire\":\"nh\",\r\n            \"New Jersey\":\"nj\",\r\n            \"New Mexico\":\"nm\",\r\n            \"New York\":\"ny\",\r\n            \"North Carolina\":\"nc\",\r\n            \"North Dakota\":\"nd\",\r\n            \"Ohio\":\"oh\",\r\n            \"Oklahoma\":\"ok\",\r\n            \"Oregon\":\"or\",\r\n            \"Pennsylvania\":\"pa\",\r\n            \"Rhode Island\":\"ri\",\r\n            \"South Carolina\":\"sc\",\r\n            \"South Dakota\":\"sd\",\r\n            \"Tennessee\":\"tn\",\r\n            \"Texas\":\"tx\",\r\n            \"Utah\":\"ut\",\r\n            \"Vermont\":\"vt\",\r\n            \"Virginia\":\"va\",\r\n            \"Washington\":\"wa\",\r\n            \"West Virginia\":\"wv\",\r\n            \"Wisconsin\":\"wi\",\r\n            \"Wyoming\":\"wy\",\r\n          };\r\n        const {items, isLoading} = this.state;\r\n        console.log(isLoading)\r\n        if (isLoading){\r\n            console.log(isLoading)\r\n            return false;\r\n        }\r\n        \r\n        console.log(items)        \r\n        \r\n      return (\r\n        <div>\r\n            <div>\r\n                {this.renderSortAndFilter()}\r\n            </div>\r\n            <Form className=\"searchbox\" onSubmit={this.handleSubmit}>\r\n                <FormGroup row>\r\n              \r\n                <Col sm={{ size: 'auto', offset: 5 }}>\r\n                    <Input\r\n                    type=\"text\"\r\n                    placeholder=\"Search\"\r\n                    onChange={this.handleTermChange}\r\n                    onKeyDown={this.handleEnter}\r\n                    />\r\n                </Col>\r\n                </FormGroup>\r\n\r\n            </Form>\r\n            <div className=\"States\" style={{paddingTop: \"100px\",width:\"100%\", height:\"60%\"}}>\r\n               <div>\r\n               \r\n               <Col sm={{ size: 'auto'}}>\r\n                    <CardDeck>\r\n                        {items.slice(0, 3).map(item =>\r\n                            <Card>\r\n                                <img top width=\"80%\" style={{width: '300px', height: '375px'}} src={\"https://www.state-maps.org/\"+ stateMap[item.name]+\".gif\"} alt={\"No image\"} />\r\n                                <CardBody>\r\n                                <CardTitle><Highlighter\r\n                                    highlightClassName=\"HighlightClass\"\r\n                                    searchWords={this.state.input.split(\" \")}\r\n                                    autoEscape={true}\r\n                                    textToHighlight={\"\" + item.name}/></CardTitle>\r\n                                <CardSubtitle>Dominate Party: <Highlighter\r\n                                    highlightClassName=\"HighlightClass\"\r\n                                    searchWords={this.state.input.split(\" \")}\r\n                                    autoEscape={true}\r\n                                    textToHighlight={\"\" + item.dominant_party}/></CardSubtitle>\r\n                                <CardSubtitle>Population: <Highlighter\r\n                                    highlightClassName=\"HighlightClass\"\r\n                                    searchWords={this.state.input.split(\" \")}\r\n                                    autoEscape={true}\r\n                                    textToHighlight={\"\" + item.population}/></CardSubtitle>\r\n                                <CardSubtitle>Median Income: <Highlighter\r\n                                    highlightClassName=\"HighlightClass\"\r\n                                    searchWords={this.state.input.split(\" \")}\r\n                                    autoEscape={true}\r\n                                    textToHighlight={\"\" + item.median_hh_income}/></CardSubtitle>\r\n                                <CardSubtitle>Primary Energy Source: <Highlighter\r\n                                    highlightClassName=\"HighlightClass\"\r\n                                    searchWords={this.state.input.split(\" \")}\r\n                                    autoEscape={true}\r\n                                    textToHighlight={\"\" + item.primary_energy_source_1}/></CardSubtitle>\r\n                                <Button href= {\"/state/\" + item.name} class=\"nav-link\"  to={\"/state/\" + item.name}> See More</Button>\r\n                                </CardBody>\r\n                                \r\n                            </Card>\r\n                        )}\r\n                    </CardDeck>\r\n                    <CardDeck>\r\n                        {items.slice(3, 6).map(item =>\r\n                            <Card>\r\n                                <img top width=\"80%\" style={{width: '300px', height: '375px'}} src={\"https://www.state-maps.org/\"+ stateMap[item.name]+\".gif\"} alt={\"No image\"} />\r\n                                <CardBody>\r\n                                <CardTitle><Highlighter\r\n                                    highlightClassName=\"HighlightClass\"\r\n                                    searchWords={this.state.input.split(\" \")}\r\n                                    autoEscape={true}\r\n                                    textToHighlight={\"\" + item.name}/></CardTitle>\r\n                                <CardSubtitle>Dominate Party: <Highlighter\r\n                                    highlightClassName=\"HighlightClass\"\r\n                                    searchWords={this.state.input.split(\" \")}\r\n                                    autoEscape={true}\r\n                                    textToHighlight={\"\" + item.dominant_party}/></CardSubtitle>\r\n                                <CardSubtitle>Population: <Highlighter\r\n                                    highlightClassName=\"HighlightClass\"\r\n                                    searchWords={this.state.input.split(\" \")}\r\n                                    autoEscape={true}\r\n                                    textToHighlight={\"\" + item.population}/></CardSubtitle>\r\n                                <CardSubtitle>Median Income: <Highlighter\r\n                                    highlightClassName=\"HighlightClass\"\r\n                                    searchWords={this.state.input.split(\" \")}\r\n                                    autoEscape={true}\r\n                                    textToHighlight={\"\" + item.median_hh_income}/></CardSubtitle>\r\n                                <CardSubtitle>Primary Energy Source: <Highlighter\r\n                                    highlightClassName=\"HighlightClass\"\r\n                                    searchWords={this.state.input.split(\" \")}\r\n                                    autoEscape={true}\r\n                                    textToHighlight={\"\" + item.primary_energy_source_1}/></CardSubtitle>\r\n                                    <Button href= {\"/state/\" + item.name} class=\"nav-link\"  to={\"/state/\" + item.name} > See More</Button>\r\n                                </CardBody>\r\n                                \r\n                            </Card>\r\n                        )}\r\n                    </CardDeck>\r\n                    <CardDeck>\r\n                        {items.slice(6, 10).map(item =>\r\n                            <Card>\r\n                                <img top width=\"80%\" style={{width: '300px', height: '375px'}} src={\"https://www.state-maps.org/\"+ stateMap[item.name]+\".gif\"} alt={\"No image\"} />\r\n                                <CardBody>\r\n                                <CardTitle><Highlighter\r\n                                    highlightClassName=\"HighlightClass\"\r\n                                    searchWords={this.state.input.split(\" \")}\r\n                                    autoEscape={true}\r\n                                    textToHighlight={\"\" + item.name}/></CardTitle>\r\n                               <CardSubtitle>Dominate Party: <Highlighter\r\n                                    highlightClassName=\"HighlightClass\"\r\n                                    searchWords={this.state.input.split(\" \")}\r\n                                    autoEscape={true}\r\n                                    textToHighlight={\"\" + item.dominant_party}/></CardSubtitle>\r\n                                <CardSubtitle>Population: <Highlighter\r\n                                    highlightClassName=\"HighlightClass\"\r\n                                    searchWords={this.state.input.split(\" \")}\r\n                                    autoEscape={true}\r\n                                    textToHighlight={\"\" + item.population}/></CardSubtitle>\r\n                                <CardSubtitle>Median Income: <Highlighter\r\n                                    highlightClassName=\"HighlightClass\"\r\n                                    searchWords={this.state.input.split(\" \")}\r\n                                    autoEscape={true}\r\n                                    textToHighlight={\"\" + item.median_hh_income}/></CardSubtitle>\r\n                                <CardSubtitle>Primary Energy Source: <Highlighter\r\n                                    highlightClassName=\"HighlightClass\"\r\n                                    searchWords={this.state.input.split(\" \")}\r\n                                    autoEscape={true}\r\n                                    textToHighlight={\"\" + item.primary_energy_source_1}/></CardSubtitle>\r\n                                <Button href= {\"/state/\" + item.name} class=\"nav-link\"  to={\"/state/\" + item.name}> See More</Button>\r\n                                </CardBody>\r\n                                \r\n                            </Card>\r\n                        )}\r\n                    </CardDeck>\r\n\r\n                \r\n                </Col>\r\n                \r\n                </div>\r\n                <div>\r\n            <Pagination size=\"lg\" style={{justifyContent: 'center', paddingTop:'3%'}} aria-label=\"Page navigation example\">\r\n            <PaginationItem>\r\n              <PaginationLink first onClick={() => this.handlePageClick(1)} href={\"#\"} / >\r\n            </PaginationItem>\r\n            <PaginationItem>\r\n              <PaginationLink previous onClick={() => this.handlePageClick(this.state.lastpage)} href={\"#\"} />\r\n            </PaginationItem>\r\n            {/* <PaginationItem>\r\n              <PaginationLink onClick={() => this.handlePageClick(this.state.lastpage)} href={\"#\"}>\r\n                {this.state.lastpage}\r\n              </PaginationLink>\r\n            </PaginationItem> */}\r\n            <PaginationItem>\r\n              <PaginationLink onClick={() => this.handlePageClick(this.state.page)} href={\"#\"}>\r\n                {this.state.page}\r\n              </PaginationLink>\r\n            </PaginationItem>\r\n            <PaginationItem>\r\n              <PaginationLink onClick={() => this.handlePageClick(this.state.nextpage)} href={\"#\"}>\r\n                {this.state.nextpage}\r\n              </PaginationLink>\r\n            </PaginationItem>\r\n            <PaginationItem>\r\n              <PaginationLink next onClick={() => this.handlePageClick(this.state.nextpage)} href={\"#\"} />\r\n            </PaginationItem>\r\n            <PaginationItem>\r\n              <PaginationLink last onClick={() => this.handlePageClick(this.state.pages)} href=\"#\" />\r\n            </PaginationItem>\r\n          </Pagination>\r\n          </div>\r\n            </div>\r\n        </div>\r\n      );\r\n    }\r\n}\r\n\r\nexport default States;"]},"metadata":{},"sourceType":"module"}